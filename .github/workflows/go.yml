# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

permissions:
  contents: read

on:
  push:
  pull_request:

env:
  release_name: build_${{github.run_number}}
  latest_go_version: '1.25'
  branch: ${{github.ref_name}}

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{env.latest_go_version}}
    - name: Install gofumpt
      run: go install mvdan.cc/gofumpt@latest
    - name: Check formating
      run: gofumpt -d ./
  
  lint:
    needs: format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{env.latest_go_version}}
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    - name: Install errcheck
      run: go install github.com/kisielk/errcheck@latest
    - name: Install golangci-lint
      run: go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.4.0
    - name: Install revive
      run: go install github.com/mgechev/revive@latest    
    - name: Check
      run: make lint
  
  test:
    needs: format
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{env.latest_go_version}}
    - name: Test
      run: go test -v ./...
      
  build-linux:
    needs: test
    strategy:
      matrix:
        os: [ubuntu-24.04]
        platform: [64]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{env.latest_go_version}}
    - name: Build
      run: go build -v ./...
    - name: Build Artifact
      run: go build -v .
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dreamdump-${{env.release_name}}_linux_${{matrix.platform}}
        path: ./dreamdump
  
  build-arch:
    needs: test
    on:
      push:
        branches: [ "main" ]
      pull_request:
        branches: [ "main" ]
    strategy:
      matrix:
        platform: [64]
    runs-on: ubuntu-latest
    container: archlinux
    steps:
    - name: Install software
      run: | 
        pacman -Syu --noconfirm
        pacman -S base-devel go git --noconfirm
    - name: Create user
      run: |
        useradd -m build
    - name: Clone GuillaumeFalourd/poc-github-actions PUBLIC repository
      uses: GuillaumeFalourd/clone-github-repo-action@v2.1
      with:
        owner: 'MoriGM'
        repository: 'dreamdump'
        depth: 1
    - name: Build archlinux package
      run: |
        chown build:build -R ./
        cd dreamdump
        su build -c "makepkg --noconfirm"
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dreamdump-${{env.release_name}}_arch_${{matrix.platform}}
        path: dreamdump/dreamdump*.pkg.tar.zst

  build-windows:
    needs: test
    strategy:
      matrix:
        os: [windows-2022]
        platform: [64]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{env.latest_go_version}}
    - name: Build
      run: go build -v ./...
    - name: Build Artifact
      run: go build -v .
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dreamdump-${{env.release_name}}_win_${{matrix.platform}}
        path: ./dreamdump.exe
